// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: terp/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateTerpid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Terpid  string `protobuf:"bytes,2,opt,name=terpid,proto3" json:"terpid,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateTerpid) Reset()         { *m = MsgCreateTerpid{} }
func (m *MsgCreateTerpid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTerpid) ProtoMessage()    {}
func (*MsgCreateTerpid) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{0}
}

func (m *MsgCreateTerpid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgCreateTerpid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTerpid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgCreateTerpid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTerpid.Merge(m, src)
}

func (m *MsgCreateTerpid) XXX_Size() int {
	return m.Size()
}

func (m *MsgCreateTerpid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTerpid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTerpid proto.InternalMessageInfo

func (m *MsgCreateTerpid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTerpid) GetTerpid() string {
	if m != nil {
		return m.Terpid
	}
	return ""
}

func (m *MsgCreateTerpid) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateTerpidResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTerpidResponse) Reset()         { *m = MsgCreateTerpidResponse{} }
func (m *MsgCreateTerpidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTerpidResponse) ProtoMessage()    {}
func (*MsgCreateTerpidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{1}
}

func (m *MsgCreateTerpidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgCreateTerpidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTerpidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgCreateTerpidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTerpidResponse.Merge(m, src)
}

func (m *MsgCreateTerpidResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgCreateTerpidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTerpidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTerpidResponse proto.InternalMessageInfo

func (m *MsgCreateTerpidResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTerpid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Terpid  string `protobuf:"bytes,3,opt,name=terpid,proto3" json:"terpid,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateTerpid) Reset()         { *m = MsgUpdateTerpid{} }
func (m *MsgUpdateTerpid) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTerpid) ProtoMessage()    {}
func (*MsgUpdateTerpid) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{2}
}

func (m *MsgUpdateTerpid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgUpdateTerpid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTerpid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgUpdateTerpid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTerpid.Merge(m, src)
}

func (m *MsgUpdateTerpid) XXX_Size() int {
	return m.Size()
}

func (m *MsgUpdateTerpid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTerpid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTerpid proto.InternalMessageInfo

func (m *MsgUpdateTerpid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTerpid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTerpid) GetTerpid() string {
	if m != nil {
		return m.Terpid
	}
	return ""
}

func (m *MsgUpdateTerpid) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateTerpidResponse struct{}

func (m *MsgUpdateTerpidResponse) Reset()         { *m = MsgUpdateTerpidResponse{} }
func (m *MsgUpdateTerpidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTerpidResponse) ProtoMessage()    {}
func (*MsgUpdateTerpidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{3}
}

func (m *MsgUpdateTerpidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgUpdateTerpidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTerpidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgUpdateTerpidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTerpidResponse.Merge(m, src)
}

func (m *MsgUpdateTerpidResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgUpdateTerpidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTerpidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTerpidResponse proto.InternalMessageInfo

type MsgDeleteTerpid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTerpid) Reset()         { *m = MsgDeleteTerpid{} }
func (m *MsgDeleteTerpid) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTerpid) ProtoMessage()    {}
func (*MsgDeleteTerpid) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{4}
}

func (m *MsgDeleteTerpid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgDeleteTerpid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTerpid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgDeleteTerpid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTerpid.Merge(m, src)
}

func (m *MsgDeleteTerpid) XXX_Size() int {
	return m.Size()
}

func (m *MsgDeleteTerpid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTerpid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTerpid proto.InternalMessageInfo

func (m *MsgDeleteTerpid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTerpid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTerpidResponse struct{}

func (m *MsgDeleteTerpidResponse) Reset()         { *m = MsgDeleteTerpidResponse{} }
func (m *MsgDeleteTerpidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTerpidResponse) ProtoMessage()    {}
func (*MsgDeleteTerpidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{5}
}

func (m *MsgDeleteTerpidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgDeleteTerpidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTerpidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgDeleteTerpidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTerpidResponse.Merge(m, src)
}

func (m *MsgDeleteTerpidResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgDeleteTerpidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTerpidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTerpidResponse proto.InternalMessageInfo

type MsgCreateSupplychain struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Product     string `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Info        string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Supplyinfo  string `protobuf:"bytes,4,opt,name=supplyinfo,proto3" json:"supplyinfo,omitempty"`
	Supplyextra string `protobuf:"bytes,5,opt,name=supplyextra,proto3" json:"supplyextra,omitempty"`
}

func (m *MsgCreateSupplychain) Reset()         { *m = MsgCreateSupplychain{} }
func (m *MsgCreateSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSupplychain) ProtoMessage()    {}
func (*MsgCreateSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{6}
}

func (m *MsgCreateSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgCreateSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgCreateSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSupplychain.Merge(m, src)
}

func (m *MsgCreateSupplychain) XXX_Size() int {
	return m.Size()
}

func (m *MsgCreateSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSupplychain proto.InternalMessageInfo

func (m *MsgCreateSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSupplychain) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *MsgCreateSupplychain) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *MsgCreateSupplychain) GetSupplyinfo() string {
	if m != nil {
		return m.Supplyinfo
	}
	return ""
}

func (m *MsgCreateSupplychain) GetSupplyextra() string {
	if m != nil {
		return m.Supplyextra
	}
	return ""
}

type MsgCreateSupplychainResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSupplychainResponse) Reset()         { *m = MsgCreateSupplychainResponse{} }
func (m *MsgCreateSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSupplychainResponse) ProtoMessage()    {}
func (*MsgCreateSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{7}
}

func (m *MsgCreateSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgCreateSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgCreateSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSupplychainResponse.Merge(m, src)
}

func (m *MsgCreateSupplychainResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgCreateSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSupplychainResponse proto.InternalMessageInfo

func (m *MsgCreateSupplychainResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSupplychain struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Product     string `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Info        string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Supplyinfo  string `protobuf:"bytes,5,opt,name=supplyinfo,proto3" json:"supplyinfo,omitempty"`
	Supplyextra string `protobuf:"bytes,6,opt,name=supplyextra,proto3" json:"supplyextra,omitempty"`
}

func (m *MsgUpdateSupplychain) Reset()         { *m = MsgUpdateSupplychain{} }
func (m *MsgUpdateSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSupplychain) ProtoMessage()    {}
func (*MsgUpdateSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{8}
}

func (m *MsgUpdateSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgUpdateSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgUpdateSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSupplychain.Merge(m, src)
}

func (m *MsgUpdateSupplychain) XXX_Size() int {
	return m.Size()
}

func (m *MsgUpdateSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSupplychain proto.InternalMessageInfo

func (m *MsgUpdateSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSupplychain) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetSupplyinfo() string {
	if m != nil {
		return m.Supplyinfo
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetSupplyextra() string {
	if m != nil {
		return m.Supplyextra
	}
	return ""
}

type MsgUpdateSupplychainResponse struct{}

func (m *MsgUpdateSupplychainResponse) Reset()         { *m = MsgUpdateSupplychainResponse{} }
func (m *MsgUpdateSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSupplychainResponse) ProtoMessage()    {}
func (*MsgUpdateSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{9}
}

func (m *MsgUpdateSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgUpdateSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgUpdateSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSupplychainResponse.Merge(m, src)
}

func (m *MsgUpdateSupplychainResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgUpdateSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSupplychainResponse proto.InternalMessageInfo

type MsgDeleteSupplychain struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSupplychain) Reset()         { *m = MsgDeleteSupplychain{} }
func (m *MsgDeleteSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSupplychain) ProtoMessage()    {}
func (*MsgDeleteSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{10}
}

func (m *MsgDeleteSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgDeleteSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgDeleteSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSupplychain.Merge(m, src)
}

func (m *MsgDeleteSupplychain) XXX_Size() int {
	return m.Size()
}

func (m *MsgDeleteSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSupplychain proto.InternalMessageInfo

func (m *MsgDeleteSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSupplychain) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSupplychainResponse struct{}

func (m *MsgDeleteSupplychainResponse) Reset()         { *m = MsgDeleteSupplychainResponse{} }
func (m *MsgDeleteSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSupplychainResponse) ProtoMessage()    {}
func (*MsgDeleteSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d2bc8ae8552a21, []int{11}
}

func (m *MsgDeleteSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *MsgDeleteSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *MsgDeleteSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSupplychainResponse.Merge(m, src)
}

func (m *MsgDeleteSupplychainResponse) XXX_Size() int {
	return m.Size()
}

func (m *MsgDeleteSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSupplychainResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateTerpid)(nil), "terpnetwork.terp.terp.MsgCreateTerpid")
	proto.RegisterType((*MsgCreateTerpidResponse)(nil), "terpnetwork.terp.terp.MsgCreateTerpidResponse")
	proto.RegisterType((*MsgUpdateTerpid)(nil), "terpnetwork.terp.terp.MsgUpdateTerpid")
	proto.RegisterType((*MsgUpdateTerpidResponse)(nil), "terpnetwork.terp.terp.MsgUpdateTerpidResponse")
	proto.RegisterType((*MsgDeleteTerpid)(nil), "terpnetwork.terp.terp.MsgDeleteTerpid")
	proto.RegisterType((*MsgDeleteTerpidResponse)(nil), "terpnetwork.terp.terp.MsgDeleteTerpidResponse")
	proto.RegisterType((*MsgCreateSupplychain)(nil), "terpnetwork.terp.terp.MsgCreateSupplychain")
	proto.RegisterType((*MsgCreateSupplychainResponse)(nil), "terpnetwork.terp.terp.MsgCreateSupplychainResponse")
	proto.RegisterType((*MsgUpdateSupplychain)(nil), "terpnetwork.terp.terp.MsgUpdateSupplychain")
	proto.RegisterType((*MsgUpdateSupplychainResponse)(nil), "terpnetwork.terp.terp.MsgUpdateSupplychainResponse")
	proto.RegisterType((*MsgDeleteSupplychain)(nil), "terpnetwork.terp.terp.MsgDeleteSupplychain")
	proto.RegisterType((*MsgDeleteSupplychainResponse)(nil), "terpnetwork.terp.terp.MsgDeleteSupplychainResponse")
}

func init() { proto.RegisterFile("terp/tx.proto", fileDescriptor_12d2bc8ae8552a21) }

var fileDescriptor_12d2bc8ae8552a21 = []byte{
	// 511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0xf3, 0x57, 0x31, 0x08, 0x54, 0x16, 0xa8, 0xac, 0x00, 0x56, 0xe5, 0x13, 0x12, 0xea,
	0x46, 0x02, 0xc1, 0x15, 0x94, 0x82, 0x38, 0xf5, 0x12, 0xc4, 0x85, 0xdb, 0xda, 0x5e, 0xd2, 0x95,
	0x82, 0x6d, 0xbc, 0x1b, 0xc9, 0x15, 0x2f, 0xc1, 0x23, 0xf0, 0x08, 0x3c, 0x06, 0xc7, 0x1e, 0x39,
	0xa2, 0xe4, 0xc6, 0x53, 0x20, 0xcf, 0xda, 0xc6, 0xf5, 0x66, 0x13, 0xb7, 0x97, 0x36, 0x33, 0x3b,
	0x3b, 0xdf, 0xf7, 0xcd, 0xec, 0x27, 0xc3, 0x9d, 0x20, 0x8c, 0xd9, 0x54, 0xe5, 0x34, 0xcd, 0x12,
	0x95, 0x10, 0x37, 0x10, 0x2a, 0x64, 0x71, 0xcc, 0x16, 0xcb, 0x24, 0x60, 0x4b, 0x5a, 0x9c, 0xe2,
	0x9f, 0xc9, 0x43, 0x2c, 0xac, 0x8e, 0x45, 0xa4, 0x2f, 0x4c, 0x8e, 0x30, 0x2d, 0x57, 0x69, 0xba,
	0xbc, 0x08, 0xcf, 0x99, 0x88, 0x75, 0xde, 0x67, 0x70, 0xff, 0x4c, 0x2e, 0x4e, 0x33, 0xce, 0x14,
	0x9f, 0xd5, 0x97, 0x88, 0x0b, 0x07, 0x61, 0x91, 0x4b, 0x32, 0xd7, 0x39, 0x76, 0x9e, 0xde, 0x9a,
	0x57, 0x21, 0x39, 0x82, 0x71, 0xd1, 0x4a, 0x44, 0x6e, 0x1f, 0x0f, 0xca, 0xa8, 0xb8, 0xc1, 0xa2,
	0x28, 0xe3, 0x52, 0xba, 0x03, 0x7d, 0xa3, 0x0c, 0xfd, 0x13, 0x78, 0xb4, 0x05, 0x62, 0xce, 0x65,
	0x9a, 0xc4, 0x92, 0x93, 0xbb, 0xd0, 0x17, 0x11, 0xa2, 0x0c, 0xe7, 0x7d, 0x11, 0xf9, 0x5f, 0x91,
	0xd1, 0xc7, 0x34, 0xea, 0xca, 0x48, 0x37, 0xe8, 0x57, 0x0d, 0x1a, 0x0c, 0x07, 0x36, 0x86, 0xc3,
	0xab, 0x0c, 0x9f, 0x20, 0xc3, 0x36, 0x64, 0xc5, 0xd0, 0x7f, 0x8d, 0x8c, 0xde, 0xf2, 0x25, 0xbf,
	0x19, 0xa3, 0xb2, 0x7f, 0xbb, 0x41, 0xdd, 0xff, 0x87, 0x03, 0x0f, 0xea, 0x09, 0x7d, 0xf8, 0xbf,
	0xa2, 0x1d, 0x08, 0x2e, 0x1c, 0xa4, 0x59, 0x12, 0xad, 0x42, 0x55, 0xae, 0xa1, 0x0a, 0x09, 0x81,
	0xa1, 0x88, 0x3f, 0x27, 0xa5, 0x76, 0xfc, 0x4d, 0x3c, 0x00, 0xbd, 0x79, 0x3c, 0xd1, 0xe2, 0x1b,
	0x19, 0x72, 0x0c, 0xb7, 0x75, 0xc4, 0x73, 0x95, 0x31, 0x77, 0x84, 0x05, 0xcd, 0x94, 0x4f, 0xe1,
	0xf1, 0x36, 0x86, 0xd6, 0x25, 0xfe, 0xd4, 0x92, 0xf4, 0x48, 0xbb, 0x49, 0x6a, 0xaf, 0xb1, 0x21,
	0x71, 0xb0, 0x5d, 0xe2, 0xd0, 0x2a, 0x71, 0xb4, 0x4f, 0xe2, 0xd8, 0x94, 0xe8, 0xa1, 0x44, 0x83,
	0x71, 0xbd, 0xa5, 0x37, 0xa8, 0x48, 0x2f, 0xf1, 0x46, 0x8a, 0x4a, 0x04, 0xa3, 0x43, 0x85, 0xf0,
	0xfc, 0xef, 0x08, 0x06, 0x67, 0x72, 0x41, 0x72, 0x38, 0x34, 0x0c, 0x79, 0x42, 0x6d, 0x8e, 0xa7,
	0x5b, 0xcc, 0x35, 0x79, 0x79, 0xad, 0xf2, 0x7a, 0x8d, 0x39, 0x1c, 0x1a, 0xc6, 0xdb, 0x8d, 0xdc,
	0x2e, 0xdf, 0x83, 0x6c, 0xf3, 0x58, 0x81, 0x6c, 0x18, 0x6c, 0x37, 0x72, 0xbb, 0x7c, 0x0f, 0xb2,
	0xcd, 0x7d, 0xe4, 0x1b, 0xdc, 0x33, 0x9d, 0x47, 0x3b, 0xcc, 0xaf, 0x51, 0x3f, 0x79, 0x75, 0xbd,
	0xfa, 0x26, 0xb8, 0xe9, 0x11, 0xda, 0x61, 0x84, 0xdd, 0xc1, 0xad, 0x2f, 0xba, 0x00, 0x37, 0x9f,
	0x33, 0xed, 0x30, 0xc5, 0xee, 0xe0, 0xd6, 0xc7, 0x3e, 0x7b, 0xf7, 0x6b, 0xed, 0x39, 0x97, 0x6b,
	0xcf, 0xf9, 0xb3, 0xf6, 0x9c, 0xef, 0x1b, 0xaf, 0x77, 0xb9, 0xf1, 0x7a, 0xbf, 0x37, 0x5e, 0xef,
	0xd3, 0xb3, 0x85, 0x50, 0xe7, 0xab, 0x80, 0x86, 0xc9, 0x97, 0xe9, 0x4c, 0xa8, 0xd3, 0xa2, 0xf7,
	0x7b, 0xec, 0x3d, 0xc5, 0x8f, 0x58, 0xae, 0xff, 0xa9, 0x8b, 0x94, 0xcb, 0x60, 0x8c, 0x9f, 0xb1,
	0x17, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x44, 0x0d, 0x1c, 0x20, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ context.Context
	_ grpc.ClientConn
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateTerpid(ctx context.Context, in *MsgCreateTerpid, opts ...grpc.CallOption) (*MsgCreateTerpidResponse, error)
	UpdateTerpid(ctx context.Context, in *MsgUpdateTerpid, opts ...grpc.CallOption) (*MsgUpdateTerpidResponse, error)
	DeleteTerpid(ctx context.Context, in *MsgDeleteTerpid, opts ...grpc.CallOption) (*MsgDeleteTerpidResponse, error)
	CreateSupplychain(ctx context.Context, in *MsgCreateSupplychain, opts ...grpc.CallOption) (*MsgCreateSupplychainResponse, error)
	UpdateSupplychain(ctx context.Context, in *MsgUpdateSupplychain, opts ...grpc.CallOption) (*MsgUpdateSupplychainResponse, error)
	DeleteSupplychain(ctx context.Context, in *MsgDeleteSupplychain, opts ...grpc.CallOption) (*MsgDeleteSupplychainResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateTerpid(ctx context.Context, in *MsgCreateTerpid, opts ...grpc.CallOption) (*MsgCreateTerpidResponse, error) {
	out := new(MsgCreateTerpidResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/CreateTerpid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTerpid(ctx context.Context, in *MsgUpdateTerpid, opts ...grpc.CallOption) (*MsgUpdateTerpidResponse, error) {
	out := new(MsgUpdateTerpidResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/UpdateTerpid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTerpid(ctx context.Context, in *MsgDeleteTerpid, opts ...grpc.CallOption) (*MsgDeleteTerpidResponse, error) {
	out := new(MsgDeleteTerpidResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/DeleteTerpid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSupplychain(ctx context.Context, in *MsgCreateSupplychain, opts ...grpc.CallOption) (*MsgCreateSupplychainResponse, error) {
	out := new(MsgCreateSupplychainResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/CreateSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSupplychain(ctx context.Context, in *MsgUpdateSupplychain, opts ...grpc.CallOption) (*MsgUpdateSupplychainResponse, error) {
	out := new(MsgUpdateSupplychainResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/UpdateSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSupplychain(ctx context.Context, in *MsgDeleteSupplychain, opts ...grpc.CallOption) (*MsgDeleteSupplychainResponse, error) {
	out := new(MsgDeleteSupplychainResponse)
	err := c.cc.Invoke(ctx, "/terpnetwork.terp.terp.Msg/DeleteSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateTerpid(context.Context, *MsgCreateTerpid) (*MsgCreateTerpidResponse, error)
	UpdateTerpid(context.Context, *MsgUpdateTerpid) (*MsgUpdateTerpidResponse, error)
	DeleteTerpid(context.Context, *MsgDeleteTerpid) (*MsgDeleteTerpidResponse, error)
	CreateSupplychain(context.Context, *MsgCreateSupplychain) (*MsgCreateSupplychainResponse, error)
	UpdateSupplychain(context.Context, *MsgUpdateSupplychain) (*MsgUpdateSupplychainResponse, error)
	DeleteSupplychain(context.Context, *MsgDeleteSupplychain) (*MsgDeleteSupplychainResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct{}

func (*UnimplementedMsgServer) CreateTerpid(ctx context.Context, req *MsgCreateTerpid) (*MsgCreateTerpidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTerpid not implemented")
}

func (*UnimplementedMsgServer) UpdateTerpid(ctx context.Context, req *MsgUpdateTerpid) (*MsgUpdateTerpidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTerpid not implemented")
}

func (*UnimplementedMsgServer) DeleteTerpid(ctx context.Context, req *MsgDeleteTerpid) (*MsgDeleteTerpidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTerpid not implemented")
}

func (*UnimplementedMsgServer) CreateSupplychain(ctx context.Context, req *MsgCreateSupplychain) (*MsgCreateSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSupplychain not implemented")
}

func (*UnimplementedMsgServer) UpdateSupplychain(ctx context.Context, req *MsgUpdateSupplychain) (*MsgUpdateSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSupplychain not implemented")
}

func (*UnimplementedMsgServer) DeleteSupplychain(ctx context.Context, req *MsgDeleteSupplychain) (*MsgDeleteSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSupplychain not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateTerpid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTerpid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTerpid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/CreateTerpid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTerpid(ctx, req.(*MsgCreateTerpid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTerpid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTerpid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTerpid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/UpdateTerpid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTerpid(ctx, req.(*MsgUpdateTerpid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTerpid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTerpid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTerpid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/DeleteTerpid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTerpid(ctx, req.(*MsgDeleteTerpid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/CreateSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSupplychain(ctx, req.(*MsgCreateSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/UpdateSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSupplychain(ctx, req.(*MsgUpdateSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terpnetwork.terp.terp.Msg/DeleteSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSupplychain(ctx, req.(*MsgDeleteSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terpnetwork.terp.terp.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTerpid",
			Handler:    _Msg_CreateTerpid_Handler,
		},
		{
			MethodName: "UpdateTerpid",
			Handler:    _Msg_UpdateTerpid_Handler,
		},
		{
			MethodName: "DeleteTerpid",
			Handler:    _Msg_DeleteTerpid_Handler,
		},
		{
			MethodName: "CreateSupplychain",
			Handler:    _Msg_CreateSupplychain_Handler,
		},
		{
			MethodName: "UpdateSupplychain",
			Handler:    _Msg_UpdateSupplychain_Handler,
		},
		{
			MethodName: "DeleteSupplychain",
			Handler:    _Msg_DeleteSupplychain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "terp/tx.proto",
}

func (m *MsgCreateTerpid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTerpid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTerpid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Terpid) > 0 {
		i -= len(m.Terpid)
		copy(dAtA[i:], m.Terpid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Terpid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTerpidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTerpidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTerpidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTerpid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTerpid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTerpid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Terpid) > 0 {
		i -= len(m.Terpid)
		copy(dAtA[i:], m.Terpid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Terpid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTerpidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTerpidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTerpidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTerpid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTerpid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTerpid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTerpidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTerpidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTerpidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Supplyextra) > 0 {
		i -= len(m.Supplyextra)
		copy(dAtA[i:], m.Supplyextra)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyextra)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Supplyinfo) > 0 {
		i -= len(m.Supplyinfo)
		copy(dAtA[i:], m.Supplyinfo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyinfo)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Product) > 0 {
		i -= len(m.Product)
		copy(dAtA[i:], m.Product)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Product)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Supplyextra) > 0 {
		i -= len(m.Supplyextra)
		copy(dAtA[i:], m.Supplyextra)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyextra)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Supplyinfo) > 0 {
		i -= len(m.Supplyinfo)
		copy(dAtA[i:], m.Supplyinfo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyinfo)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Product) > 0 {
		i -= len(m.Product)
		copy(dAtA[i:], m.Product)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Product)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func (m *MsgCreateTerpid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Terpid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTerpidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTerpid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Terpid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTerpidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTerpid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTerpidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Product)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyinfo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyextra)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Product)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyinfo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyextra)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

func (m *MsgCreateTerpid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTerpid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTerpid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Terpid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Terpid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgCreateTerpidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTerpidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTerpidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgUpdateTerpid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTerpid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTerpid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Terpid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Terpid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgUpdateTerpidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTerpidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTerpidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgDeleteTerpid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTerpid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTerpid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgDeleteTerpidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTerpidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTerpidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgCreateSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Product = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyinfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyinfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyextra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyextra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgCreateSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgUpdateSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Product = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyinfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyinfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyextra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyextra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgUpdateSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgDeleteSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *MsgDeleteSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
